//
// TCPSocket Test 
//

class TCPConnection
{
	var _server;
	var _connectionId;
	
	constructor() { }
}

class TCPServer
{
	var _sock;
	
	constructor(port, func) {
		var MaxConnections = 8;

		_sock = new TCPSocket(port, function(event, connectionId, dataValue) {
			switch(event) {
				case TCPSocket.Connected: {
					printf("TCPSocket connected. ConnectionId=%d\n", connectionId);
					var connection = new TCPConnection();
					connection._server = this;
					connection._connectionId = connectionId;
					_connections[connectionId] = connection;
					send(connectionId, "Hello there\n");
				}
				
				case TCPSocket.Disconnected: {
					printf("TCPSocket disconnected. ConnectionId=%d\n", connectionId);
					_connections[connectionId] = null;
				}
				
				case TCPSocket.ReceivedData: {
					printf("TCPSocket received data: %s\n", dataValue);
				}
				
				default: {
					printf("TCPSocket fired. event=%d\n", event);
				}
			}
		});
		
		_sock._connections = [ ];
		_sock._connections.length = MaxConnections;
	}
}

var server = new TCPServer(8080, function() { printf("Got it!\n"); });
