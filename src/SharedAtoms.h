// This file is generated. Do not edit

#include <cstdint>

enum class SA : uint16_t {
    Array = 0,
    Base64 = 1,
    BothEdges = 2,
    Connected = 3,
    Directory = 4,
    Disconnected = 5,
    Error = 6,
    FS = 7,
    FallingEdge = 8,
    File = 9,
    GPIO = 10,
    Global = 11,
    High = 12,
    IPAddr = 13,
    Input = 14,
    InputPulldown = 15,
    InputPullup = 16,
    Iterator = 17,
    JSON = 18,
    Low = 19,
    MaxConnections = 20,
    None = 21,
    Object = 22,
    Output = 23,
    OutputOpenDrain = 24,
    PinMode = 25,
    ReceivedData = 26,
    Reconnected = 27,
    RisingEdge = 28,
    SentData = 29,
    TCP = 30,
    TCPProto = 31,
    Task = 32,
    Trigger = 33,
    UDP = 34,
    UDPProto = 35,
    __index = 36,
    __nativeObject = 37,
    __object = 38,
    arguments = 39,
    back = 40,
    call = 41,
    close = 42,
    consoleListener = 43,
    constructor = 44,
    currentTime = 45,
    decode = 46,
    delay = 47,
    digitalRead = 48,
    digitalWrite = 49,
    disconnect = 50,
    done = 51,
    encode = 52,
    env = 53,
    eof = 54,
    error = 55,
    errorString = 56,
    format = 57,
    front = 58,
    getValue = 59,
    import = 60,
    importString = 61,
    iterator = 62,
    join = 63,
    lastError = 64,
    length = 65,
    lookupHostname = 66,
    makeDirectory = 67,
    meminfo = 68,
    mount = 69,
    mounted = 70,
    name = 71,
    next = 72,
    null = 73,
    onInterrupt = 74,
    open = 75,
    openDirectory = 76,
    parse = 77,
    pop_back = 78,
    pop_front = 79,
    print = 80,
    printf = 81,
    println = 82,
    push_back = 83,
    push_front = 84,
    read = 85,
    remove = 86,
    rename = 87,
    run = 88,
    seek = 89,
    send = 90,
    setPinMode = 91,
    setValue = 92,
    size = 93,
    split = 94,
    stat = 95,
    stringify = 96,
    toFloat = 97,
    toInt = 98,
    toString = 99,
    toUInt = 100,
    trim = 101,
    type = 102,
    undefined = 103,
    unmount = 104,
    valid = 105,
    value = 106,
    waitForEvent = 107,
    write = 108,
};

namespace m8r {
    const char** sharedAtoms(uint16_t& nelts);
    static constexpr uint16_t ExternalAtomOffset = 200;
}
