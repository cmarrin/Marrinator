// This file is generated. Do not edit

#include <cstdint>

enum class SA : uint16_t {
    Array = 0,
    Base64 = 1,
    BothEdges = 2,
    Connected = 3,
    Directory = 4,
    Disconnected = 5,
    Error = 6,
    FS = 7,
    FallingEdge = 8,
    File = 9,
    GPIO = 10,
    Global = 11,
    High = 12,
    IPAddr = 13,
    Input = 14,
    InputPulldown = 15,
    InputPullup = 16,
    Iterator = 17,
    JSON = 18,
    Low = 19,
    MaxConnections = 20,
    None = 21,
    Object = 22,
    Once = 23,
    Output = 24,
    OutputOpenDrain = 25,
    PinMode = 26,
    ReceivedData = 27,
    Reconnected = 28,
    Repeating = 29,
    RisingEdge = 30,
    SentData = 31,
    TCP = 32,
    TCPProto = 33,
    Task = 34,
    Trigger = 35,
    UDP = 36,
    UDPProto = 37,
    __index = 38,
    __nativeObject = 39,
    __object = 40,
    arguments = 41,
    back = 42,
    call = 43,
    close = 44,
    consoleListener = 45,
    constructor = 46,
    currentTime = 47,
    decode = 48,
    delay = 49,
    digitalRead = 50,
    digitalWrite = 51,
    disconnect = 52,
    done = 53,
    encode = 54,
    env = 55,
    eof = 56,
    error = 57,
    errorString = 58,
    format = 59,
    front = 60,
    getValue = 61,
    import = 62,
    importString = 63,
    iterator = 64,
    join = 65,
    lastError = 66,
    length = 67,
    lookupHostname = 68,
    makeDirectory = 69,
    meminfo = 70,
    mount = 71,
    mounted = 72,
    name = 73,
    next = 74,
    null = 75,
    onInterrupt = 76,
    open = 77,
    openDirectory = 78,
    parse = 79,
    pop_back = 80,
    pop_front = 81,
    print = 82,
    printf = 83,
    println = 84,
    push_back = 85,
    push_front = 86,
    read = 87,
    remove = 88,
    rename = 89,
    run = 90,
    seek = 91,
    send = 92,
    setPinMode = 93,
    setValue = 94,
    size = 95,
    split = 96,
    stat = 97,
    stringify = 98,
    toFloat = 99,
    toInt = 100,
    toString = 101,
    toUInt = 102,
    trim = 103,
    type = 104,
    undefined = 105,
    unmount = 106,
    valid = 107,
    value = 108,
    waitForEvent = 109,
    write = 110,
};

namespace m8r {
    const char** sharedAtoms(uint16_t& nelts);
    static constexpr uint16_t ExternalAtomOffset = 200;
}
