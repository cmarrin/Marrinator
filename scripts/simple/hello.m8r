function processLine(line)
{
    var components = line.split(" ");
    var command = components.front;
    components.pop_front();

    var task = new Task(command, consoleListener, env);
    if (task == null) {
        printf("mrsh: %s: command not found\n", command);
        return;
    }

    task.arguments = components;
    task.env = env;
    var taskStatus = { done : false, status : 0 };
    task.run(function(exitCode) {
        taskStatus.done = true;
        taskStatus.status = exitCode;
    });

    while (!taskStatus.done) {
        waitForEvent();
    }
}

function myDelay(t)
{
    var done = false;
    printf("%%%%%%% myDelay start, t = %f\n", t);
    var timer = new Timer(t, Timer.Once, function() {
        done = true;
        printf("%%%%%%% myDelay timer fired, done = %d\n", done);
    });
    
    timer.start();
    
    while (!done) {
        waitForEvent();
        printf("%%%%%%% returned from waitForEvent, done = %d\n", done);
    }
}

//var t = new Timer(2.5, Timer.Repeating, function() { printf("******* Timer Fired\n"); });
//t.start();
//
var i = 0;
while (i < 10) {
    print("Hello World\n");
    myDelay(1);
    i++;
}

currentTime();
myDelay(10);
